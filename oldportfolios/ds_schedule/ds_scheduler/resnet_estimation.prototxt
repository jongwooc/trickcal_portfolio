name: "ResNet-50"
layer {
    name: "data"
    cpu: 1113
    gpu: 9999999
    time_unit: "usec"
}
layer {
    name: "conv1"
    cpu: 6581
    gpu: 9999999
    time_unit: "usec"
}

layer {
    name: "bn_conv1"
    cpu: 209
    gpu: 9999999
    time_unit: "usec"
}

layer {
name: "scale_conv1"
cpu: 145
gpu: 9999999
time_unit: "usec"
}

layer {
bottom: "scale_conv1"
top: "conv1_relu"
name: "conv1_relu"
type: "ReLU"
}

layer {
bottom: "conv1_relu"
top: "pool1"
name: "pool1"
type: "Pooling"
pooling_param {
kernel_size: 3
stride: 2
pool: MAX
}
}

layer {
bottom: "pool1"
top: "res2a_branch1"
name: "res2a_branch1"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2a_branch1"
top: "bn2a_branch1"
name: "bn2a_branch1"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2a_branch1"
top: "scale2a_branch1"
name: "scale2a_branch1"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "pool1"
top: "res2a_branch2a"
name: "res2a_branch2a"
type: "Convolution"
convolution_param {
num_output: 64
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2a_branch2a"
top: "bn2a_branch2a"
name: "bn2a_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2a_branch2a"
top: "scale2a_branch2a"
name: "scale2a_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2a_branch2a"
top: "res2a_branch2a_relu"
name: "res2a_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res2a_branch2a_relu"
top: "res2a_branch2b"
name: "res2a_branch2b"
type: "Convolution"
convolution_param {
num_output: 64
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res2a_branch2b"
top: "bn2a_branch2b"
name: "bn2a_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2a_branch2b"
top: "scale2a_branch2b"
name: "scale2a_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2a_branch2b"
top: "res2a_branch2b_relu"
name: "res2a_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res2a_branch2b_relu"
top: "res2a_branch2c"
name: "res2a_branch2c"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2a_branch2c"
top: "bn2a_branch2c"
name: "bn2a_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2a_branch2c"
top: "scale2a_branch2c"
name: "scale2a_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2a_branch1"
bottom: "scale2a_branch2c"
top: "res2a"
name: "res2a"
type: "Eltwise"
}

layer {
bottom: "res2a"
top: "res2a_relu"
name: "res2a_relu"
type: "ReLU"
}

layer {
bottom: "res2a_relu"
top: "res2b_branch2a"
name: "res2b_branch2a"
type: "Convolution"
convolution_param {
num_output: 64
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2b_branch2a"
top: "bn2b_branch2a"
name: "bn2b_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2b_branch2a"
top: "scale2b_branch2a"
name: "scale2b_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2b_branch2a"
top: "res2b_branch2a_relu"
name: "res2b_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res2b_branch2a_relu"
top: "res2b_branch2b"
name: "res2b_branch2b"
type: "Convolution"
convolution_param {
num_output: 64
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res2b_branch2b"
top: "bn2b_branch2b"
name: "bn2b_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2b_branch2b"
top: "scale2b_branch2b"
name: "scale2b_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2b_branch2b"
top: "res2b_branch2b_relu"
name: "res2b_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res2b_branch2b_relu"
top: "res2b_branch2c"
name: "res2b_branch2c"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2b_branch2c"
top: "bn2b_branch2c"
name: "bn2b_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2b_branch2c"
top: "scale2b_branch2c"
name: "scale2b_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res2a_relu"
bottom: "scale2b_branch2c"
top: "res2b"
name: "res2b"
type: "Eltwise"
}

layer {
bottom: "res2b"
top: "res2b_relu"
name: "res2b_relu"
type: "ReLU"
}

layer {
bottom: "res2b_relu"
top: "res2c_branch2a"
name: "res2c_branch2a"
type: "Convolution"
convolution_param {
num_output: 64
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2c_branch2a"
top: "bn2c_branch2a"
name: "bn2c_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2c_branch2a"
top: "scale2c_branch2a"
name: "scale2c_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2c_branch2a"
top: "res2c_branch2a_relu"
name: "res2c_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res2c_branch2a_relu"
top: "res2c_branch2b"
name: "res2c_branch2b"
type: "Convolution"
convolution_param {
num_output: 64
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res2c_branch2b"
top: "bn2c_branch2b"
name: "bn2c_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2c_branch2b"
top: "scale2c_branch2b"
name: "scale2c_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale2c_branch2b"
top: "res2c_branch2b_relu"
name: "res2c_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res2c_branch2b_relu"
top: "res2c_branch2c"
name: "res2c_branch2c"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res2c_branch2c"
top: "bn2c_branch2c"
name: "bn2c_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn2c_branch2c"
top: "scale2c_branch2c"
name: "scale2c_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res2b_relu"
bottom: "scale2c_branch2c"
top: "res2c"
name: "res2c"
type: "Eltwise"
}

layer {
bottom: "res2c"
top: "res2c_relu"
name: "res2c_relu"
type: "ReLU"
}

layer {
bottom: "res2c_relu"
top: "res3a_branch1"
name: "res3a_branch1"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 2
bias_term: false
}
}

layer {
bottom: "res3a_branch1"
top: "bn3a_branch1"
name: "bn3a_branch1"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3a_branch1"
top: "scale3a_branch1"
name: "scale3a_branch1"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res2c_relu"
top: "res3a_branch2a"
name: "res3a_branch2a"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 1
pad: 0
stride: 2
bias_term: false
}
}

layer {
bottom: "res3a_branch2a"
top: "bn3a_branch2a"
name: "bn3a_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3a_branch2a"
top: "scale3a_branch2a"
name: "scale3a_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3a_branch2a"
top: "res3a_branch2a_relu"
name: "res3a_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res3a_branch2a_relu"
top: "res3a_branch2b"
name: "res3a_branch2b"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res3a_branch2b"
top: "bn3a_branch2b"
name: "bn3a_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3a_branch2b"
top: "scale3a_branch2b"
name: "scale3a_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3a_branch2b"
top: "res3a_branch2b_relu"
name: "res3a_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res3a_branch2b_relu"
top: "res3a_branch2c"
name: "res3a_branch2c"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3a_branch2c"
top: "bn3a_branch2c"
name: "bn3a_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3a_branch2c"
top: "scale3a_branch2c"
name: "scale3a_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3a_branch1"
bottom: "scale3a_branch2c"
top: "res3a"
name: "res3a"
type: "Eltwise"
}

layer {
bottom: "res3a"
top: "res3a_relu"
name: "res3a_relu"
type: "ReLU"
}

layer {
bottom: "res3a_relu"
top: "res3b_branch2a"
name: "res3b_branch2a"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3b_branch2a"
top: "bn3b_branch2a"
name: "bn3b_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3b_branch2a"
top: "scale3b_branch2a"
name: "scale3b_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3b_branch2a"
top: "res3b_branch2a_relu"
name: "res3b_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res3b_branch2a_relu"
top: "res3b_branch2b"
name: "res3b_branch2b"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res3b_branch2b"
top: "bn3b_branch2b"
name: "bn3b_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3b_branch2b"
top: "scale3b_branch2b"
name: "scale3b_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3b_branch2b"
top: "res3b_branch2b_relu"
name: "res3b_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res3b_branch2b_relu"
top: "res3b_branch2c"
name: "res3b_branch2c"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3b_branch2c"
top: "bn3b_branch2c"
name: "bn3b_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3b_branch2c"
top: "scale3b_branch2c"
name: "scale3b_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res3a_relu"
bottom: "scale3b_branch2c"
top: "res3b"
name: "res3b"
type: "Eltwise"
}

layer {
bottom: "res3b"
top: "res3b_relu"
name: "res3b_relu"
type: "ReLU"
}

layer {
bottom: "res3b_relu"
top: "res3c_branch2a"
name: "res3c_branch2a"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3c_branch2a"
top: "bn3c_branch2a"
name: "bn3c_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3c_branch2a"
top: "scale3c_branch2a"
name: "scale3c_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3c_branch2a"
top: "res3c_branch2a_relu"
name: "res3c_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res3c_branch2a_relu"
top: "res3c_branch2b"
name: "res3c_branch2b"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res3c_branch2b"
top: "bn3c_branch2b"
name: "bn3c_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3c_branch2b"
top: "scale3c_branch2b"
name: "scale3c_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3c_branch2b"
top: "res3c_branch2b_relu"
name: "res3c_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res3c_branch2b_relu"
top: "res3c_branch2c"
name: "res3c_branch2c"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3c_branch2c"
top: "bn3c_branch2c"
name: "bn3c_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3c_branch2c"
top: "scale3c_branch2c"
name: "scale3c_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res3b_relu"
bottom: "scale3c_branch2c"
top: "res3c"
name: "res3c"
type: "Eltwise"
}

layer {
bottom: "res3c"
top: "res3c_relu"
name: "res3c_relu"
type: "ReLU"
}

layer {
bottom: "res3c_relu"
top: "res3d_branch2a"
name: "res3d_branch2a"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3d_branch2a"
top: "bn3d_branch2a"
name: "bn3d_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3d_branch2a"
top: "scale3d_branch2a"
name: "scale3d_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3d_branch2a"
top: "res3d_branch2a_relu"
name: "res3d_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res3d_branch2a_relu"
top: "res3d_branch2b"
name: "res3d_branch2b"
type: "Convolution"
convolution_param {
num_output: 128
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res3d_branch2b"
top: "bn3d_branch2b"
name: "bn3d_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3d_branch2b"
top: "scale3d_branch2b"
name: "scale3d_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale3d_branch2b"
top: "res3d_branch2b_relu"
name: "res3d_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res3d_branch2b_relu"
top: "res3d_branch2c"
name: "res3d_branch2c"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res3d_branch2c"
top: "bn3d_branch2c"
name: "bn3d_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn3d_branch2c"
top: "scale3d_branch2c"
name: "scale3d_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res3c_relu"
bottom: "scale3d_branch2c"
top: "res3d"
name: "res3d"
type: "Eltwise"
}

layer {
bottom: "res3d"
top: "res3d_relu"
name: "res3d_relu"
type: "ReLU"
}

layer {
bottom: "res3d_relu"
top: "res4a_branch1"
name: "res4a_branch1"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 2
bias_term: false
}
}

layer {
bottom: "res4a_branch1"
top: "bn4a_branch1"
name: "bn4a_branch1"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4a_branch1"
top: "scale4a_branch1"
name: "scale4a_branch1"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res3d_relu"
top: "res4a_branch2a"
name: "res4a_branch2a"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 2
bias_term: false
}
}

layer {
bottom: "res4a_branch2a"
top: "bn4a_branch2a"
name: "bn4a_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4a_branch2a"
top: "scale4a_branch2a"
name: "scale4a_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4a_branch2a"
top: "res4a_branch2a_relu"
name: "res4a_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res4a_branch2a_relu"
top: "res4a_branch2b"
name: "res4a_branch2b"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res4a_branch2b"
top: "bn4a_branch2b"
name: "bn4a_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4a_branch2b"
top: "scale4a_branch2b"
name: "scale4a_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4a_branch2b"
top: "res4a_branch2b_relu"
name: "res4a_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res4a_branch2b_relu"
top: "res4a_branch2c"
name: "res4a_branch2c"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4a_branch2c"
top: "bn4a_branch2c"
name: "bn4a_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4a_branch2c"
top: "scale4a_branch2c"
name: "scale4a_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4a_branch1"
bottom: "scale4a_branch2c"
top: "res4a"
name: "res4a"
type: "Eltwise"
}

layer {
bottom: "res4a"
top: "res4a_relu"
name: "res4a_relu"
type: "ReLU"
}

layer {
bottom: "res4a_relu"
top: "res4b_branch2a"
name: "res4b_branch2a"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4b_branch2a"
top: "bn4b_branch2a"
name: "bn4b_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4b_branch2a"
top: "scale4b_branch2a"
name: "scale4b_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4b_branch2a"
top: "res4b_branch2a_relu"
name: "res4b_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res4b_branch2a_relu"
top: "res4b_branch2b"
name: "res4b_branch2b"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res4b_branch2b"
top: "bn4b_branch2b"
name: "bn4b_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4b_branch2b"
top: "scale4b_branch2b"
name: "scale4b_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4b_branch2b"
top: "res4b_branch2b_relu"
name: "res4b_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res4b_branch2b_relu"
top: "res4b_branch2c"
name: "res4b_branch2c"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4b_branch2c"
top: "bn4b_branch2c"
name: "bn4b_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4b_branch2c"
top: "scale4b_branch2c"
name: "scale4b_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res4a_relu"
bottom: "scale4b_branch2c"
top: "res4b"
name: "res4b"
type: "Eltwise"
}

layer {
bottom: "res4b"
top: "res4b_relu"
name: "res4b_relu"
type: "ReLU"
}

layer {
bottom: "res4b_relu"
top: "res4c_branch2a"
name: "res4c_branch2a"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4c_branch2a"
top: "bn4c_branch2a"
name: "bn4c_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4c_branch2a"
top: "scale4c_branch2a"
name: "scale4c_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4c_branch2a"
top: "res4c_branch2a_relu"
name: "res4c_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res4c_branch2a_relu"
top: "res4c_branch2b"
name: "res4c_branch2b"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res4c_branch2b"
top: "bn4c_branch2b"
name: "bn4c_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4c_branch2b"
top: "scale4c_branch2b"
name: "scale4c_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4c_branch2b"
top: "res4c_branch2b_relu"
name: "res4c_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res4c_branch2b_relu"
top: "res4c_branch2c"
name: "res4c_branch2c"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4c_branch2c"
top: "bn4c_branch2c"
name: "bn4c_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4c_branch2c"
top: "scale4c_branch2c"
name: "scale4c_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res4b_relu"
bottom: "scale4c_branch2c"
top: "res4c"
name: "res4c"
type: "Eltwise"
}

layer {
bottom: "res4c"
top: "res4c_relu"
name: "res4c_relu"
type: "ReLU"
}

layer {
bottom: "res4c_relu"
top: "res4d_branch2a"
name: "res4d_branch2a"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4d_branch2a"
top: "bn4d_branch2a"
name: "bn4d_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4d_branch2a"
top: "scale4d_branch2a"
name: "scale4d_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4d_branch2a"
top: "res4d_branch2a_relu"
name: "res4d_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res4d_branch2a_relu"
top: "res4d_branch2b"
name: "res4d_branch2b"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res4d_branch2b"
top: "bn4d_branch2b"
name: "bn4d_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4d_branch2b"
top: "scale4d_branch2b"
name: "scale4d_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4d_branch2b"
top: "res4d_branch2b_relu"
name: "res4d_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res4d_branch2b_relu"
top: "res4d_branch2c"
name: "res4d_branch2c"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4d_branch2c"
top: "bn4d_branch2c"
name: "bn4d_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4d_branch2c"
top: "scale4d_branch2c"
name: "scale4d_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res4c_relu"
bottom: "scale4d_branch2c"
top: "res4d"
name: "res4d"
type: "Eltwise"
}

layer {
bottom: "res4d"
top: "res4d_relu"
name: "res4d_relu"
type: "ReLU"
}

layer {
bottom: "res4d_relu"
top: "res4e_branch2a"
name: "res4e_branch2a"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4e_branch2a"
top: "bn4e_branch2a"
name: "bn4e_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4e_branch2a"
top: "scale4e_branch2a"
name: "scale4e_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4e_branch2a"
top: "res4e_branch2a_relu"
name: "res4e_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res4e_branch2a_relu"
top: "res4e_branch2b"
name: "res4e_branch2b"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res4e_branch2b"
top: "bn4e_branch2b"
name: "bn4e_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4e_branch2b"
top: "scale4e_branch2b"
name: "scale4e_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4e_branch2b"
top: "res4e_branch2b_relu"
name: "res4e_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res4e_branch2b_relu"
top: "res4e_branch2c"
name: "res4e_branch2c"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4e_branch2c"
top: "bn4e_branch2c"
name: "bn4e_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4e_branch2c"
top: "scale4e_branch2c"
name: "scale4e_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res4d_relu"
bottom: "scale4e_branch2c"
top: "res4e"
name: "res4e"
type: "Eltwise"
}

layer {
bottom: "res4e"
top: "res4e_relu"
name: "res4e_relu"
type: "ReLU"
}

layer {
bottom: "res4e_relu"
top: "res4f_branch2a"
name: "res4f_branch2a"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4f_branch2a"
top: "bn4f_branch2a"
name: "bn4f_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4f_branch2a"
top: "scale4f_branch2a"
name: "scale4f_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4f_branch2a"
top: "res4f_branch2a_relu"
name: "res4f_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res4f_branch2a_relu"
top: "res4f_branch2b"
name: "res4f_branch2b"
type: "Convolution"
convolution_param {
num_output: 256
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res4f_branch2b"
top: "bn4f_branch2b"
name: "bn4f_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4f_branch2b"
top: "scale4f_branch2b"
name: "scale4f_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale4f_branch2b"
top: "res4f_branch2b_relu"
name: "res4f_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res4f_branch2b_relu"
top: "res4f_branch2c"
name: "res4f_branch2c"
type: "Convolution"
convolution_param {
num_output: 1024
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res4f_branch2c"
top: "bn4f_branch2c"
name: "bn4f_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn4f_branch2c"
top: "scale4f_branch2c"
name: "scale4f_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res4e_relu"
bottom: "scale4f_branch2c"
top: "res4f"
name: "res4f"
type: "Eltwise"
}

layer {
bottom: "res4f"
top: "res4f_relu"
name: "res4f_relu"
type: "ReLU"
}

layer {
bottom: "res4f_relu"
top: "res5a_branch1"
name: "res5a_branch1"
type: "Convolution"
convolution_param {
num_output: 2048
kernel_size: 1
pad: 0
stride: 2
bias_term: false
}
}

layer {
bottom: "res5a_branch1"
top: "bn5a_branch1"
name: "bn5a_branch1"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5a_branch1"
top: "scale5a_branch1"
name: "scale5a_branch1"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res4f_relu"
top: "res5a_branch2a"
name: "res5a_branch2a"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 2
bias_term: false
}
}

layer {
bottom: "res5a_branch2a"
top: "bn5a_branch2a"
name: "bn5a_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5a_branch2a"
top: "scale5a_branch2a"
name: "scale5a_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5a_branch2a"
top: "res5a_branch2a_relu"
name: "res5a_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res5a_branch2a_relu"
top: "res5a_branch2b"
name: "res5a_branch2b"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res5a_branch2b"
top: "bn5a_branch2b"
name: "bn5a_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5a_branch2b"
top: "scale5a_branch2b"
name: "scale5a_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5a_branch2b"
top: "res5a_branch2b_relu"
name: "res5a_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res5a_branch2b_relu"
top: "res5a_branch2c"
name: "res5a_branch2c"
type: "Convolution"
convolution_param {
num_output: 2048
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res5a_branch2c"
top: "bn5a_branch2c"
name: "bn5a_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5a_branch2c"
top: "scale5a_branch2c"
name: "scale5a_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5a_branch1"
bottom: "scale5a_branch2c"
top: "res5a"
name: "res5a"
type: "Eltwise"
}

layer {
bottom: "res5a"
top: "res5a_relu"
name: "res5a_relu"
type: "ReLU"
}

layer {
bottom: "res5a_relu"
top: "res5b_branch2a"
name: "res5b_branch2a"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res5b_branch2a"
top: "bn5b_branch2a"
name: "bn5b_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5b_branch2a"
top: "scale5b_branch2a"
name: "scale5b_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5b_branch2a"
top: "res5b_branch2a_relu"
name: "res5b_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res5b_branch2a_relu"
top: "res5b_branch2b"
name: "res5b_branch2b"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res5b_branch2b"
top: "bn5b_branch2b"
name: "bn5b_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5b_branch2b"
top: "scale5b_branch2b"
name: "scale5b_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5b_branch2b"
top: "res5b_branch2b_relu"
name: "res5b_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res5b_branch2b_relu"
top: "res5b_branch2c"
name: "res5b_branch2c"
type: "Convolution"
convolution_param {
num_output: 2048
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res5b_branch2c"
top: "bn5b_branch2c"
name: "bn5b_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5b_branch2c"
top: "scale5b_branch2c"
name: "scale5b_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res5a_relu"
bottom: "scale5b_branch2c"
top: "res5b"
name: "res5b"
type: "Eltwise"
}

layer {
bottom: "res5b"
top: "res5b_relu"
name: "res5b_relu"
type: "ReLU"
}

layer {
bottom: "res5b_relu"
top: "res5c_branch2a"
name: "res5c_branch2a"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res5c_branch2a"
top: "bn5c_branch2a"
name: "bn5c_branch2a"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5c_branch2a"
top: "scale5c_branch2a"
name: "scale5c_branch2a"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5c_branch2a"
top: "res5c_branch2a_relu"
name: "res5c_branch2a_relu"
type: "ReLU"
}

layer {
bottom: "res5c_branch2a_relu"
top: "res5c_branch2b"
name: "res5c_branch2b"
type: "Convolution"
convolution_param {
num_output: 512
kernel_size: 3
pad: 1
stride: 1
bias_term: false
}
}

layer {
bottom: "res5c_branch2b"
top: "bn5c_branch2b"
name: "bn5c_branch2b"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5c_branch2b"
top: "scale5c_branch2b"
name: "scale5c_branch2b"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "scale5c_branch2b"
top: "res5c_branch2b_relu"
name: "res5c_branch2b_relu"
type: "ReLU"
}

layer {
bottom: "res5c_branch2b_relu"
top: "res5c_branch2c"
name: "res5c_branch2c"
type: "Convolution"
convolution_param {
num_output: 2048
kernel_size: 1
pad: 0
stride: 1
bias_term: false
}
}

layer {
bottom: "res5c_branch2c"
top: "bn5c_branch2c"
name: "bn5c_branch2c"
type: "BatchNorm"
batch_norm_param {
use_global_stats: true
}
}

layer {
bottom: "bn5c_branch2c"
top: "scale5c_branch2c"
name: "scale5c_branch2c"
type: "Scale"
scale_param {
bias_term: true
}
}

layer {
bottom: "res5b_relu"
bottom: "scale5c_branch2c"
top: "res5c"
name: "res5c"
type: "Eltwise"
}

layer {
bottom: "res5c"
top: "res5c_relu"
name: "res5c_relu"
type: "ReLU"
}

layer {
bottom: "res5c_relu"
top: "pool5"
name: "pool5"
type: "Pooling"
pooling_param {
kernel_size: 7
stride: 1
pool: AVE
}
}

layer {
bottom: "pool5"
top: "fc1000"
name: "fc1000"
type: "InnerProduct"
inner_product_param {
num_output: 1000
}
}

layer {
bottom: "fc1000"
top: "prob"
name: "prob"
type: "Softmax"
}
layer {
name: "dummy"
type: "Softmax"
bottom: "prob"
top: "dummy"
}


    
